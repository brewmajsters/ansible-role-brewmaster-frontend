---

- name: install dependencies
  become: true
  package:
    name: "{{ item }}"
    state: present
  loop: "{{ dependencies }}"
  tags: install

- name: create nodejs directories
  become: true
  file:
    path: "{{ item }}"
    state: directory
  loop:
    - "{{ frontend_nodejs_archive_root_path }}"
    - "{{ frontend_nodejs_archive_root_path }}/{{ frontend_nodejs_archive_dir }}"
  tags: install

- name: download latest nodejs archive
  become: true
  get_url:
    url: "{{ frontend_nodejs_archive_url }}"
    dest: "{{ frontend_nodejs_archive_root_path }}"
  register: nodejs_archive
  tags: install

# retrieve nodejs_archive.dest = /opt/nodejs/nodejs-10.3.3.-x64.tar.gz

- name: unpack nodejs archive
  become: true
  unarchive:
    remote_src: true
    src: "{{ nodejs_archive.dest }}"
    dest: "{{ frontend_nodejs_archive_root_path }}"
  tags: install

- name: update path in profiles
  become: true
  blockinfile:
    block: |
      # Nodejs
      export PATH={{ frontend_nodejs_archive_root_path }}/{{ frontend_nodejs_archive_dir }}/bin:$PATH
    path: "{{ item }}/.profile"
    create: true
  loop: "{{ frontend_npm_users_home }}"
  tags: install

- name: GIT | clone brewmaster-frontend repository
  git:
    repo: "{{ frontend_repo['url'] }}"
    version: "{{ frontend_repo['version'] | default(omit) }}"
    dest: "{{ frontend_repo['dest'] }}"
    force: true
  tags: install

- name: change listen address to 0.0.0.0
  shell: "{{ item }}"
  args:
    chdir: "{{ frontend_repo['dest'] }}"
  loop:
    - jq '.scripts.dev = "webpack-dev-server --no-inline --open --hot --host 0.0.0.0 --port 80"' package.json > package_tmp.json
    - rm package.json
    - mv package_tmp.json package.json
  tags: install

- name: NPM | install frontend
  become: true
  shell: >
    . ~/.profile && npm build . && npm install
  args:
    chdir: "{{ frontend_repo['dest'] }}"

- name: SYSTEMD | nodejs repo absolute path
  command: "pwd"
  args:
    chdir: "{{ frontend_repo['dest'] }}"
  register: repo_absolute_path
  changed_when: false

- name: SYSTEMD | copy unit file
  become: true
  template:
    src: "nodejs_unit_file.service.j2"
    dest: "/etc/systemd/system/{{ frontend_service['name'] }}.service"
  register: unit_file
  notify: SYSTEMD | frontend restart
  tags: configure

- name: SYSTEMD | start frontend
  become: true
  when: unit_file.changed
  systemd:
    daemon_reload: true
    name: "{{ frontend_service['name'] }}"
    state: started
    enabled: true
  tags: configure
